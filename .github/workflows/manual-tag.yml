# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Manual Tag Components

on:
  workflow_dispatch:
    inputs:
      component:
        description: 'Component to tag'
        required: true
        type: choice
        options:
          - 'all'
          - 'server'
          - 'cli' 
          - 'sdk'
          - 'bench-dashboard'
        default: 'all'
      
      version:
        description: 'Version to tag (e.g., 0.4.0, 0.5.0-rc.1)'
        required: true
        type: string
      
      commit:
        description: 'Commit SHA to tag (leave empty to auto-detect from version history)'
        required: false
        type: string
        default: ''
      
      use_v_prefix:
        description: 'Use v prefix in tags (e.g., server-v0.7.0 instead of server-0.7.0)'
        required: false
        type: boolean
        default: false
      
      dry_run:
        description: 'Dry run - show what would be tagged without creating tags'
        required: false
        type: boolean
        default: true

permissions:
  contents: write

jobs:
  manual-tag:
    name: Create version tags manually
    runs-on: ubuntu-latest
    env:
      IGGY_CI_BUILD: true
    steps:
      - name: Validate inputs
        run: |
          # Validate version format (semantic versioning)
          if ! echo "${{ inputs.version }}" | grep -qE '^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9.-]+)?(\+[a-zA-Z0-9.-]+)?$'; then
            echo "❌ Error: Invalid version format: ${{ inputs.version }}"
            echo "Version must follow semantic versioning (e.g., 1.0.0, 1.0.0-rc.1, 1.0.0-beta.2+build.123)"
            exit 1
          fi
          
          # Validate commit SHA if provided
          if [ -n "${{ inputs.commit }}" ]; then
            if ! echo "${{ inputs.commit }}" | grep -qE '^[a-f0-9]{7,40}$'; then
              echo "❌ Error: Invalid commit SHA format: ${{ inputs.commit }}"
              echo "Commit must be a valid Git SHA (7-40 hexadecimal characters)"
              exit 1
            fi
          fi
          
          echo "✅ Input validation passed"
          echo "Component: ${{ inputs.component }}"
          echo "Version: ${{ inputs.version }}"
          echo "Commit: ${{ inputs.commit || 'auto-detect' }}"
          echo "Dry run: ${{ inputs.dry_run }}"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Need full history to find version commits
          ref: ${{ inputs.commit || github.ref }}

      - name: Setup Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Make script executable
        run: chmod +x .github/scripts/manual-tag.sh

      - name: Create tags
        id: create-tags
        env:
          TARGET_COMPONENT: ${{ inputs.component }}
          TARGET_VERSION: ${{ inputs.version }}
          TARGET_COMMIT: ${{ inputs.commit }}
          USE_V_PREFIX: ${{ inputs.use_v_prefix }}
          DRY_RUN: ${{ inputs.dry_run }}
        run: |
          # Run the manual tagging script
          .github/scripts/manual-tag.sh | tee manual-tag-output.txt
          
          # Check if any tags were created
          if grep -q "TAGS_CREATED: [1-9]" manual-tag-output.txt; then
            echo "tags_created=true" >> $GITHUB_OUTPUT
          else
            echo "tags_created=false" >> $GITHUB_OUTPUT
          fi

      - name: Generate summary
        if: always()
        run: |
          echo "## 🏷️ Manual Tag Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ inputs.dry_run }}" = "true" ]; then
            echo "### 🧪 DRY RUN MODE" >> $GITHUB_STEP_SUMMARY
            echo "No tags were actually created. This was a simulation." >> $GITHUB_STEP_SUMMARY
          else
            echo "### 🚀 PRODUCTION MODE" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Parameters:**" >> $GITHUB_STEP_SUMMARY
          echo "- Component: \`${{ inputs.component }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Version: \`${{ inputs.version }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Commit: \`${{ inputs.commit || 'auto-detected' }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- V Prefix: \`${{ inputs.use_v_prefix }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### Output" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat manual-tag-output.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          
          # Add next steps if not dry run and tags were created
          if [ "${{ inputs.dry_run }}" = "false" ] && [ "${{ steps.create-tags.outputs.tags_created }}" = "true" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### ✅ Next Steps" >> $GITHUB_STEP_SUMMARY
            echo "The created tags will automatically trigger the publish workflows." >> $GITHUB_STEP_SUMMARY
            echo "Monitor the [Actions tab](https://github.com/${{ github.repository }}/actions) for publish progress." >> $GITHUB_STEP_SUMMARY
          fi

      - name: Notify about publish trigger
        if: inputs.dry_run == false && steps.create-tags.outputs.tags_created == 'true'
        run: |
          echo "::notice title=Tags Created::New tags have been created and will trigger publish workflows automatically."
          echo "✅ Tags successfully created!"
          echo "The publish workflows will be triggered automatically for the new tags."
          echo "Check the Actions tab to monitor the publish progress."