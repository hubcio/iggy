# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: java-gradle
description: Java Gradle github iggy actions
inputs:
  task:
    description: "Task to run"
    required: true
  version:
    description: "Version for publishing"
    required: false
    default: ""
  dry_run:
    description: "Dry run mode"
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: "temurin"
        java-version: "17"
        cache: "gradle"

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Grant execute permission for gradlew
      shell: bash
      run: |
        if [ -f "foreign/java/gradlew" ]; then
          chmod +x foreign/java/gradlew
        fi

    - name: Lint (Checkstyle)
      if: inputs.task == 'lint'
      shell: bash
      run: |
        cd foreign/java

        # Run checkstyle if configured
        if grep -q "checkstyle" build.gradle 2>/dev/null; then
          ./gradlew checkstyleMain checkstyleTest --no-daemon
        else
          echo "Checkstyle not configured yet, skipping lint task"
        fi

    - name: Test
      if: inputs.task == 'test'
      shell: bash
      run: |
        # Use the build script like old CI
        if [ -f "foreign/java/dev-support/checks/build.sh" ]; then
          foreign/java/dev-support/checks/build.sh test
        else
          cd foreign/java
          ./gradlew test --no-daemon --info
        fi

        # Copy test reports
        if [ -d "foreign/java/build/test-results" ]; then
          mkdir -p reports
          cp -r foreign/java/build/test-results reports/java-tests
        fi

        # Generate test report if jacoco is configured
        if grep -q "jacoco" foreign/java/build.gradle 2>/dev/null; then
          cd foreign/java
          ./gradlew jacocoTestReport --no-daemon
        fi

    - name: Build
      if: inputs.task == 'build' || inputs.task == 'publish'
      shell: bash
      run: |
        # Use the build script like old CI
        if [ -f "foreign/java/dev-support/checks/build.sh" ]; then
          foreign/java/dev-support/checks/build.sh build -x test -x checkstyleMain -x checkstyleTest
          BUILD_EXIT_CODE=$?
        else
          cd foreign/java
          ./gradlew build -x test -x checkstyleMain -x checkstyleTest --no-daemon
          BUILD_EXIT_CODE=$?
        fi

        # List artifacts only if build succeeded
        if [ $BUILD_EXIT_CODE -eq 0 ]; then
          echo ""
          echo "Build artifacts:"
          find foreign/java -path "*/build/libs/*.jar" -type f 2>/dev/null | head -20 || echo "No jar artifacts found in build/libs directories"
        fi

        # Exit with build exit code
        exit $BUILD_EXIT_CODE

    - name: Publish to Maven
      if: inputs.task == 'publish'
      shell: bash
      env:
        MAVEN_USERNAME: ${{ env.MAVEN_USERNAME }}
        MAVEN_PASSWORD: ${{ env.MAVEN_PASSWORD }}
        MAVEN_CENTRAL_USERNAME: ${{ env.MAVEN_CENTRAL_USERNAME }}
        MAVEN_CENTRAL_PASSWORD: ${{ env.MAVEN_CENTRAL_PASSWORD }}
        OSSRH_USERNAME: ${{ env.OSSRH_USERNAME }}
        OSSRH_PASSWORD: ${{ env.OSSRH_PASSWORD }}
      run: |
        cd foreign/java

        if [ "${{ inputs.dry_run }}" = "true" ]; then
          echo "Dry run - would publish:"
          ./gradlew properties | grep -E "(group|version)" || true
        else
          # Set version if provided
          if [ -n "${{ inputs.version }}" ]; then
            echo "version=${{ inputs.version }}" >> gradle.properties
          fi

          # Publish to Maven repository
          ./gradlew publish --no-daemon
        fi

    - name: Publish snapshot
      if: inputs.task == 'publish-snapshot'
      shell: bash
      env:
        MAVEN_USERNAME: ${{ env.MAVEN_USERNAME }}
        MAVEN_PASSWORD: ${{ env.MAVEN_PASSWORD }}
      run: |
        cd foreign/java

        # Ensure version ends with -SNAPSHOT
        current_version=$(./gradlew properties -q | grep "^version:" | awk '{print $2}')
        if [[ ! "$current_version" == *"-SNAPSHOT" ]]; then
          echo "version=${current_version}-SNAPSHOT" >> gradle.properties
        fi

        # Publish snapshot
        ./gradlew publish -Psnapshot --no-daemon