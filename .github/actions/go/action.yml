# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: go
description: Go setup and test
inputs:
  task:
    description: "Task to run"
    required: true

runs:
  using: "composite"
  steps:
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: "1.23.0"
        cache-dependency-path: |
          foreign/go/go.sum
          bdd/go/go.sum
          examples/go/go.sum

    - name: Download dependencies
      shell: bash
      run: |
        if [ -f "foreign/go/go.mod" ]; then
          cd foreign/go && go mod download
        fi
        if [ -f "bdd/go/go.mod" ]; then
          cd bdd/go && go mod download
        fi
        if [ -f "examples/go/go.mod" ]; then
          cd examples/go && go mod download
        fi
    
    - name: Tidy Check
      if: inputs.task == 'test' || inputs.task == 'lint'
      shell: bash
      run: |
        cd foreign/go
        go mod tidy
        git diff --exit-code go.mod go.sum

    - name: Test
      if: inputs.task == 'test'
      shell: bash
      run: |
        cd foreign/go

        # Create reports directory
        mkdir -p ../../reports

        # Run tests with coverage
        go test -v -race -coverprofile=../../reports/go-coverage.out ./...

        # Generate coverage report
        go tool cover -html=../../reports/go-coverage.out -o ../../reports/go-coverage.html

        # Run tests with JSON output for better reporting
        go test -v -json ./... > ../../reports/go-tests.json

    - name: Lint
      if: inputs.task == 'lint'
      uses: golangci/golangci-lint-action@v6
      with:
        version: v1.61
        working-directory: foreign/go
        args: --timeout=5m
    
    - name: Lint BDD
      if: inputs.task == 'lint' && hashFiles('bdd/go/go.mod') != ''
      uses: golangci/golangci-lint-action@v6
      with:
        version: v1.61
        working-directory: bdd/go
        args: --timeout=5m
    
    - name: Lint Examples
      if: inputs.task == 'lint' && hashFiles('examples/go/go.mod') != ''
      uses: golangci/golangci-lint-action@v6
      with:
        version: v1.61
        working-directory: examples/go
        args: --timeout=5m

    - name: Build
      if: inputs.task == 'build'
      shell: bash
      run: |
        cd foreign/go

        # Build the module
        go build -v ./...

        # Verify examples compile
        if [ -d "../../examples/go" ]; then
          cd ../../examples/go
          go build -v ./...
        fi
        
    - name: Run README Examples
      if: inputs.task == 'test' && hashFiles('scripts/run-go-examples-from-readme.sh') != ''
      shell: bash
      run: |
        ./scripts/run-go-examples-from-readme.sh

    - name: Publish notification
      if: inputs.task == 'publish'
      shell: bash
      run: |
        echo "âœ… Go module published via git tag"
        echo "Version: v${{ inputs.version }}"
        echo ""
        echo "Users can now import using:"
        echo "  go get github.com/${{ github.repository }}/foreign/go@v${{ inputs.version }}"
        echo ""
        echo "Or add to go.mod:"
        echo "  require github.com/${{ github.repository }}/foreign/go v${{ inputs.version }}"
